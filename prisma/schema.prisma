generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Role {
  id           String    @id @default(uuid()) @db.Uuid
  name         RoleName  @unique
  isActive     Boolean   @default(true)
  createdBy    String    @db.VarChar(100)
  createdDate  DateTime  @default(now())
  modifiedBy   String?   @db.VarChar(100)
  modifiedDate DateTime?
  deletedBy    String?   @db.VarChar(100)
  deletedDate  DateTime?
  isDeleted    Boolean   @default(false)
  companyId    String?   @db.Uuid
  users        User[]

  @@index([createdBy])
  @@index([modifiedBy])
  @@index([deletedBy])
}

model User {
  id                     String              @id @default(uuid()) @db.Uuid
  name                   String              @db.VarChar(100)
  lastName               String              @db.VarChar(100)
  email                  String              @unique @db.VarChar(255)
  password               String?             @db.VarChar(255)
  mobileNumber           String?             @db.VarChar(20)
  profilePhotoURL        String?             @db.VarChar(1000)
  signatureURL           String?             @db.VarChar(1000)
  invitationToken        String?             @db.VarChar(255)
  invitationExpiresAt    DateTime?
  passwordResetToken     String?             @db.VarChar(255)
  passwordResetExpiresAt DateTime?
  createdBy              String              @db.VarChar(100)
  createdDate            DateTime            @default(now())
  modifiedBy             String?             @db.VarChar(100)
  modifiedDate           DateTime?
  deletedBy              String?             @db.VarChar(100)
  deletedDate            DateTime?
  isDeleted              Boolean             @default(false)
  roleId                 String?             @db.Uuid
  status                 UserStatus
  clientDetails          ClientDetail[]
  CompanyDetail          CompanyDetail[]
  companyPlanDetails     CompanyPlanDetail[]
  employeeDetail         EmployeeDetail[]
  systemSettings         SystemSettings[]
  role                   Role?               @relation(fields: [roleId], references: [id])

  @@index([email])
  @@index([roleId])
  @@index([invitationToken])
  @@index([passwordResetToken])
  @@index([createdBy])
  @@index([modifiedBy])
  @@index([deletedBy])
}

model Module {
  id                 String              @id @default(uuid()) @db.Uuid
  name               String              @db.VarChar(100)
  isActive           Boolean             @default(true)
  createdBy          String              @db.VarChar(100)
  createdDate        DateTime            @default(now())
  modifiedBy         String?             @db.VarChar(100)
  modifiedDate       DateTime?
  deletedBy          String?             @db.VarChar(100)
  deletedDate        DateTime?
  isDeleted          Boolean             @default(false)
  modulePlanMappings ModulePlanMapping[]

  @@index([createdBy])
  @@index([modifiedBy])
  @@index([deletedBy])
}

model Subscription {
  id                 String              @id @default(uuid()) @db.Uuid
  planName           String              @db.VarChar(100)
  duration           SubscriptionType
  rate               Float
  isActive           Boolean             @default(true)
  isPopular          Boolean             @default(false)
  createdBy          String              @db.VarChar(100)
  createdDate        DateTime            @default(now())
  modifiedBy         String?             @db.VarChar(100)
  modifiedDate       DateTime?
  deletedBy          String?             @db.VarChar(100)
  deletedDate        DateTime?
  isDeleted          Boolean             @default(false)
  companies          CompanyDetail[]
  companyPlanDetails CompanyPlanDetail[]
  modulePlanMappings ModulePlanMapping[]

  @@index([createdBy])
  @@index([modifiedBy])
  @@index([deletedBy])
}

model ModulePlanMapping {
  id             String        @id @default(uuid()) @db.Uuid
  subscriptionId String?       @db.Uuid
  moduleId       String?       @db.Uuid
  isActive       Boolean       @default(true)
  maxEmployees   String?       @db.VarChar(20)
  createdBy      String        @db.VarChar(100)
  createdDate    DateTime      @default(now())
  modifiedBy     String?       @db.VarChar(100)
  modifiedDate   DateTime?
  deletedBy      String?       @db.VarChar(100)
  deletedDate    DateTime?
  isDeleted      Boolean       @default(false)
  module         Module?       @relation(fields: [moduleId], references: [id])
  subscription   Subscription? @relation(fields: [subscriptionId], references: [id])

  @@index([subscriptionId])
  @@index([moduleId])
  @@index([createdBy])
  @@index([modifiedBy])
  @@index([deletedBy])
}

model CompanyDetail {
  id                  String              @id @default(uuid()) @db.Uuid
  userId              String?             @db.Uuid
  companyName         String              @db.VarChar(100)
  companyEmail        String              @db.VarChar(255)
  industry            String?             @db.VarChar(255)
  companyMobileNumber String?             @db.VarChar(20)
  address             String              @db.VarChar(255)
  city                String              @db.VarChar(255)
  state               String              @db.VarChar(255)
  planId              String?             @db.Uuid
  isActive            Boolean             @default(true)
  paymentDateTime     DateTime            @default(now())
  startDateTime       DateTime            @default(now())
  paymentMethod       String?             @db.VarChar(20)
  endDateTime         DateTime?
  createdBy           String              @db.VarChar(100)
  createdDate         DateTime            @default(now())
  modifiedBy          String?             @db.VarChar(100)
  modifiedDate        DateTime?
  deletedBy           String?             @db.VarChar(100)
  deletedDate         DateTime?
  isDeleted           Boolean             @default(false)
  foundedYear         String?             @db.VarChar(10)
  website             String?             @db.VarChar(100)
  primaryColor        String?             @db.VarChar(20)
  secondaryColor      String?             @db.VarChar(20)
  companyLogoUrl      String?             @db.VarChar(1000)
  clientDetails       ClientDetail[]
  subscription        Subscription?       @relation(fields: [planId], references: [id])
  user                User?               @relation(fields: [userId], references: [id])
  planDetails         CompanyPlanDetail[]
  employeeDetail      EmployeeDetail[]
  companyLeaves       CompanyLeave[]
  companyDepartments  CompanyDepartment[]
  companyPositions    CompanyPosition[]
  invoiceTemplates    CompanyInvoiceTemplate[]
  notificationRules   CompanyNotificationRule[]
  Inventory           InventoryItem[]
  inventoryCategories InventoryCategory[]
  inventorySuppliers  InventorySupplier[]

  @@index([planId])
  @@index([createdBy])
  @@index([modifiedBy])
  @@index([deletedBy])
}

model CompanyLeave {
  id            String         @id @default(uuid()) @db.Uuid
  companyId     String         @db.Uuid
  leaveDate     DateTime
  leaveName     String         @db.VarChar(100)
  year          String?        @db.VarChar(10)
  isActive      Boolean        @default(true)
  createdBy     String         @db.VarChar(100)
  createdDate   DateTime       @default(now())
  modifiedBy    String?        @db.VarChar(100)
  modifiedDate  DateTime?
  deletedBy     String?        @db.VarChar(100)
  deletedDate   DateTime?
  isDeleted     Boolean        @default(false)
  company       CompanyDetail  @relation(fields: [companyId], references: [id])

  @@index([companyId])
  @@index([createdBy])
  @@index([modifiedBy])
  @@index([deletedBy])
}

model CompanyPlanDetail {
  id              String        @id @default(uuid()) @db.Uuid
  companyId       String        @db.Uuid
  userId          String?       @db.Uuid
  planId          String        @db.Uuid
  duration        SubscriptionType
  startDate       DateTime      @default(now())
  endDate         DateTime?
  isActive        Boolean       @default(true)
  notes           String?       @db.VarChar(255)
  createdBy       String        @db.VarChar(100)
  createdDate     DateTime      @default(now())
  modifiedBy      String?       @db.VarChar(100)
  modifiedDate    DateTime?
  deletedBy       String?       @db.VarChar(100)
  deletedDate     DateTime?
  isDeleted       Boolean       @default(false)
  amountCents     Int?
  cardBrand       String?       @db.VarChar(50)
  cardExpMonth    Int?
  cardExpYear     Int?
  cardLast4       String?       @db.VarChar(10)
  chargeId        String?       @db.VarChar(255)
  currency        String?       @db.VarChar(10)
  paymentIntentId String?       @db.VarChar(255)
  receiptUrl      String?       @db.VarChar(500)
  invoiceNumber   String?       @db.VarChar(50)
  company         CompanyDetail @relation(fields: [companyId], references: [id])
  subscription    Subscription  @relation(fields: [planId], references: [id])
  user            User?         @relation(fields: [userId], references: [id])

  @@index([companyId])
  @@index([userId])
  @@index([planId])
  @@index([createdBy])
  @@index([modifiedBy])
  @@index([invoiceNumber])
  @@index([deletedBy])
}

model Department {
  id        String           @id @default(uuid()) @db.Uuid
  name      String           @unique @db.VarChar(100)
  deletedBy String?          @db.VarChar(100)
  deletedDate DateTime?
  isDeleted Boolean          @default(false)
  employees EmployeeDetail[]
}

model EmployeeRole {
  id        String           @id @default(uuid()) @db.Uuid
  name      String           @unique @db.VarChar(100)
  deletedBy String?          @db.VarChar(100)
  deletedDate DateTime?
  isDeleted Boolean          @default(false)
  employees EmployeeDetail[]
}

model EmployeeDetail {
  id             String           @id @default(uuid()) @db.Uuid
  userId         String?          @db.Uuid
  companyId      String?          @db.Uuid
  departmentId   String           @db.Uuid
  employeeRoleId String           @db.Uuid
  address        String?          @db.VarChar(255)
  city           String?          @db.VarChar(255)
  state          String?          @db.VarChar(255)
  joinDate       DateTime         @default(now())
  ReleivingDate  DateTime?
  createdBy      String           @db.VarChar(100)
  createdDate    DateTime         @default(now())
  modifiedBy     String?          @db.VarChar(100)
  modifiedDate   DateTime?
  deletedBy      String?          @db.VarChar(100)
  deletedDate    DateTime?
  isDeleted      Boolean          @default(false)
  managerId      String?          @db.Uuid
  salary         String?          @db.VarChar(100)
  skills         String?          @db.VarChar(100)
  eid            String?          @db.VarChar(100)
  employeeStatus UserStatus       @default(Active)
  CompanyDetail  CompanyDetail?   @relation(fields: [companyId], references: [id])
  department     Department       @relation(fields: [departmentId], references: [id])
  employeeRole   EmployeeRole     @relation(fields: [employeeRoleId], references: [id])
  manager        EmployeeDetail?  @relation("ManagerEmployees", fields: [managerId], references: [id])
  subordinates   EmployeeDetail[] @relation("ManagerEmployees")
  user           User?            @relation(fields: [userId], references: [id])

  @@index([userId])
  @@index([companyId])
  @@index([departmentId])
  @@index([employeeRoleId])
  @@index([deletedBy])
}

model ClientDetail {
  id                String          @id @default(uuid()) @db.Uuid
  userId            String?         @db.Uuid
  companyId         String?         @db.Uuid
  clientStatus      UserStatus      @default(Active)
  address           String?         @db.VarChar(255)
  city              String?         @db.VarChar(255)
  state             String?         @db.VarChar(255)
  notes             String?         @db.VarChar(255)
  inviteDate        DateTime        @default(now())
  joinDate          DateTime        @default(now())
  createdBy         String          @db.VarChar(100)
  createdDate       DateTime        @default(now())
  modifiedBy        String?         @db.VarChar(100)
  modifiedDate      DateTime?
  deletedBy         String?         @db.VarChar(100)
  deletedDate       DateTime?
  isDeleted         Boolean         @default(false)
  clientCompanyName String          @db.VarChar(100)
  CompanyDetail     CompanyDetail?  @relation(fields: [companyId], references: [id])
  user              User?           @relation(fields: [userId], references: [id])
  clientServices    ClientService[]

  @@index([userId])
  @@index([companyId])
  @@index([createdBy])
  @@index([modifiedBy])
  @@index([deletedBy])
}

model Services {
  id             String          @id @default(uuid()) @db.Uuid
  serviceName    String          @db.VarChar(100)
  createdBy      String          @db.VarChar(100)
  createdDate    DateTime        @default(now())
  modifiedBy     String?         @db.VarChar(100)
  modifiedDate   DateTime?
  deletedBy      String?         @db.VarChar(100)
  deletedDate    DateTime?
  isDeleted      Boolean         @default(false)
  clientServices ClientService[]

  @@index([createdBy])
  @@index([modifiedBy])
  @@index([deletedBy])
}

model ClientService {
  id           String        @id @default(uuid()) @db.Uuid
  clientId     String        @db.Uuid
  serviceId    String        @db.Uuid
  status       ServiceStatus @default(Scheduled)
  assignedDate DateTime      @default(now())
  startDate    DateTime?
  endDate      DateTime?
  notes        String?       @db.VarChar(1000)
  createdBy    String        @db.VarChar(100)
  createdDate  DateTime      @default(now())
  modifiedBy   String?       @db.VarChar(100)
  modifiedDate DateTime?
  deletedBy    String?       @db.VarChar(100)
  deletedDate  DateTime?
  isDeleted    Boolean       @default(false)
  client       ClientDetail  @relation(fields: [clientId], references: [id])
  service      Services      @relation(fields: [serviceId], references: [id])

  @@unique([clientId, serviceId])
  @@index([clientId])
  @@index([serviceId])
  @@index([status])
  @@index([createdBy])
  @@index([modifiedBy])
  @@index([deletedBy])
}

model CompanyDepartment {
  id           String         @id @default(uuid()) @db.Uuid
  companyId    String         @db.Uuid
  department   String         @db.VarChar(100)
  status       Boolean        @default(true)
  createdBy    String         @db.VarChar(100)
  createdDate  DateTime       @default(now())
  modifiedBy   String?        @db.VarChar(100)
  modifiedDate DateTime?
  deletedBy    String?        @db.VarChar(100)
  deletedDate  DateTime?
  isDeleted    Boolean        @default(false)
  company      CompanyDetail  @relation(fields: [companyId], references: [id])
  positions    CompanyPosition[]

  @@unique([companyId, department])
  @@index([companyId])
  @@index([status])
  @@index([createdBy])
  @@index([modifiedBy])
  @@index([deletedBy])
}

model CompanyPosition {
  id                      String              @id @default(uuid()) @db.Uuid
  companyId               String              @db.Uuid
  departmentId            String?             @db.Uuid
  title                   String              @db.VarChar(150)
  level                   String?             @db.VarChar(50)
  description             String?             @db.VarChar(1000)
  salaryMin               Int?
  salaryMax               Int?
  jobRequirements         String?             @db.VarChar(1000)
  jobResponsibilities     String?             @db.VarChar(1000)
  technicalSkills        String?             @db.VarChar(1000)
  createdBy               String              @db.VarChar(100)
  createdDate             DateTime            @default(now())
  modifiedBy              String?             @db.VarChar(100)
  modifiedDate            DateTime?
  deletedBy               String?             @db.VarChar(100)
  deletedDate             DateTime?
  isDeleted               Boolean             @default(false)
  company                 CompanyDetail       @relation(fields: [companyId], references: [id])
  department              CompanyDepartment?  @relation(fields: [departmentId], references: [id])

  @@index([companyId])
  @@index([departmentId])
  @@index([createdBy])
  @@index([modifiedBy])
  @@index([deletedBy])
}

// ================= Templates =================
model CompanyInvoiceTemplate {
  id            String        @id @default(uuid()) @db.Uuid
  companyId     String        @db.Uuid
  name          String        @db.VarChar(150)
  description   String?       @db.VarChar(500)
  isDefault     Boolean       @default(false)
  status        String        @db.VarChar(20) // active | inactive
  templateHtml  String?       @db.VarChar(10000)
  createdBy     String        @db.VarChar(100)
  createdDate   DateTime      @default(now())
  modifiedBy    String?       @db.VarChar(100)
  modifiedDate  DateTime?
  deletedBy     String?       @db.VarChar(100)
  deletedDate   DateTime?
  isDeleted     Boolean       @default(false)
  company       CompanyDetail @relation(fields: [companyId], references: [id])
  notificationRules CompanyNotificationRule[]

  @@index([companyId])
  @@index([status])
  @@index([createdBy])
  @@index([modifiedBy])
  @@index([deletedBy])
}

model SystemSettings {
  id                 String         @id @default(uuid()) @db.Uuid
  userId             String?        @db.Uuid
  emailNotifications Boolean        @default(true)
  smsNotifications   Boolean        @default(false)
  pushNotifications  Boolean        @default(false)
  weeklyReports      Boolean        @default(false)
  paymentGateway     PaymentGateway @default(Stripe)
  primaryColor       String?        @db.VarChar(20)
  secondaryColor     String?        @db.VarChar(20)
  brandingLogo       String?        @db.VarChar(1000)
  supportEmail       String?        @db.VarChar(255)
  supportAutoAssign  Boolean?       @default(true)
  supportSlaHours    Int?
  supportAutoReply   Boolean?       @default(true)
  billingCurrency     String?       @db.VarChar(10)
  billingInvoicePrefix String?      @db.VarChar(20)
  billingTaxRate      Float?
  stripePubKey        String?       @db.VarChar(255)
  stripeSecretKey     String?       @db.VarChar(255)
  createdBy          String         @db.VarChar(100)
  createdDate        DateTime       @default(now())
  modifiedBy         String?        @db.VarChar(100)
  modifiedDate       DateTime?
  deletedBy          String?        @db.VarChar(100)
  deletedDate        DateTime?
  isDeleted          Boolean        @default(false)
  user               User?          @relation(fields: [userId], references: [id])

  @@index([userId])
  @@index([createdBy])
  @@index([modifiedBy])
  @@index([deletedBy])
}

enum UserStatus {
  Active     @map("Active")
  InActive   @map("InActive")
  Invited    @map("Invited")
  Deactivate @map("Deactivate")
}

enum RoleName {
  SuperAdmin @map("SuperAdmin")
  Company    @map("Company")
  Manager    @map("Manager")
  Client     @map("Client")
  Employee   @map("Employee")
}

enum SubscriptionType {
  Monthly @map("Monthly")
  Annual  @map("Annual")
  Quarterly @map("Quarterly")
  HalfYearly @map("Half Yearly")
}

enum ServiceStatus {
  Scheduled  @map("Scheduled")
  InProgress @map("InProgress")
  Completed  @map("Completed")
  Cancelled  @map("Cancelled")
  OnHold     @map("OnHold")
  Pending    @map("Pending")
}

enum PaymentGateway {
  Stripe @map("Stripe")
  PayPal @map("PayPal")
  Square @map("Square")
}

/// Notification system for company-level automated rules
model CompanyNotificationRule {
  id            String                         @id @default(uuid()) @db.Uuid
  companyId     String                         @db.Uuid
  name          String                         @db.VarChar(150)
  description   String?                        @db.VarChar(500)
  templateId    String?                        @db.Uuid
  isActive      Boolean                        @default(true)
  createdBy     String                         @db.VarChar(100)
  createdDate   DateTime                       @default(now())
  modifiedBy    String?                        @db.VarChar(100)
  modifiedDate  DateTime?
  deletedBy     String?                        @db.VarChar(100)
  deletedDate   DateTime?
  isDeleted     Boolean                        @default(false)
  company       CompanyDetail                  @relation(fields: [companyId], references: [id])
  template      CompanyInvoiceTemplate?        @relation(fields: [templateId], references: [id])
  channels      CompanyNotificationChannel[]
  recipients    CompanyNotificationRecipient[]

  @@index([companyId])
  @@index([createdBy])
  @@index([modifiedBy])
  @@index([deletedBy])
  }

model CompanyNotificationChannel {
  id           String                   @id @default(uuid()) @db.Uuid
  ruleId       String                   @db.Uuid
  type         NotificationChannelType
  isEnabled    Boolean                  @default(true)
  createdBy    String                   @db.VarChar(100)
  createdDate  DateTime                 @default(now())
  modifiedBy   String?                  @db.VarChar(100)
  modifiedDate DateTime?
  deletedBy    String?                  @db.VarChar(100)
  deletedDate  DateTime?
  isDeleted    Boolean                  @default(false)
  rule         CompanyNotificationRule  @relation(fields: [ruleId], references: [id])

  @@unique([ruleId, type])
  @@index([ruleId])
  @@index([createdBy])
  @@index([modifiedBy])
  @@index([deletedBy])
}

model CompanyNotificationRecipient {
  id           String                   @id @default(uuid()) @db.Uuid
  ruleId       String                   @db.Uuid
  type         NotificationRecipientType
  // Optional free-form value if needed (email, userId, etc.)
  value        String?                  @db.VarChar(255)
  createdBy    String                   @db.VarChar(100)
  createdDate  DateTime                 @default(now())
  modifiedBy   String?                  @db.VarChar(100)
  modifiedDate DateTime?
  deletedBy    String?                  @db.VarChar(100)
  deletedDate  DateTime?
  isDeleted    Boolean                  @default(false)
  rule         CompanyNotificationRule  @relation(fields: [ruleId], references: [id])

  @@index([ruleId])
  @@index([type])
  @@index([createdBy])
  @@index([modifiedBy])
  @@index([deletedBy])
}

enum NotificationChannelType {
  Email
  SMS
}

// Recipient presets matching UI (can extend later)
enum NotificationRecipientType {
  assigned_employee
  manager
  client
  accounting
}

// ================= Inventory =================
enum InventoryUnit {
  Units
  Pieces
  Boxes
  Packs
}

model InventoryCategory {
  id           String         @id @default(uuid()) @db.Uuid
  companyId    String         @db.Uuid
  name         String         @db.VarChar(100)
  description  String?        @db.VarChar(100)
  status       Boolean        @default(true)
  createdBy    String         @db.VarChar(100)
  createdDate  DateTime       @default(now())
  modifiedBy   String?        @db.VarChar(100)
  modifiedDate DateTime?
  deletedBy    String?        @db.VarChar(100)
  deletedDate  DateTime?
  isDeleted    Boolean        @default(false)
  company      CompanyDetail  @relation(fields: [companyId], references: [id])
  items        InventoryItem[]

  @@unique([companyId, name])
  @@index([companyId])
  @@index([status])
}

model InventorySupplier {
  id           String         @id @default(uuid()) @db.Uuid
  companyId    String         @db.Uuid
  name         String         @db.VarChar(150)
  description  String?        @db.VarChar(150)
  status       UserStatus     @default(Active)
  createdBy    String         @db.VarChar(100)
  createdDate  DateTime       @default(now())
  modifiedBy   String?        @db.VarChar(100)
  modifiedDate DateTime?
  deletedBy    String?        @db.VarChar(100)
  deletedDate  DateTime?
  isDeleted    Boolean        @default(false)
  company      CompanyDetail  @relation(fields: [companyId], references: [id])
  items        InventoryItem[]

  @@unique([companyId, name])
  @@index([companyId])
}

model InventoryItem {
  id               String             @id @default(uuid()) @db.Uuid
  companyId        String             @db.Uuid
  name             String             @db.VarChar(150)
  categoryId       String?            @db.Uuid
  brand            String?            @db.VarChar(100)
  sku              String             @db.VarChar(100)
  model            String?            @db.VarChar(100)
  location         String?            @db.VarChar(255)
  supplierId       String?            @db.Uuid
  purchaseDate     DateTime?
  description      String?            @db.VarChar(2000)
  quantity         Int                @default(0)
  unit             InventoryUnit      @default(Units)
  unitPrice        Float              @default(0)
  warrantyExpiry   DateTime?
  notes            String?            @db.VarChar(1000)
  createdBy        String             @db.VarChar(100)
  createdDate      DateTime           @default(now())
  modifiedBy       String?            @db.VarChar(100)
  modifiedDate     DateTime?
  deletedBy        String?            @db.VarChar(100)
  deletedDate      DateTime?
  isDeleted        Boolean            @default(false)
  company          CompanyDetail      @relation(fields: [companyId], references: [id])
  category         InventoryCategory? @relation(fields: [categoryId], references: [id])
  supplier         InventorySupplier? @relation(fields: [supplierId], references: [id])
  serialNumbers    InventorySerial[]

  @@unique([companyId, sku])
  @@index([companyId])
  @@index([categoryId])
  @@index([supplierId])
  @@index([createdBy])
}

model InventorySerial {
  id           String        @id @default(uuid()) @db.Uuid
  itemId       String        @db.Uuid
  serial       String        @unique @db.VarChar(200)
  createdBy    String        @db.VarChar(100)
  createdDate  DateTime      @default(now())
  item         InventoryItem @relation(fields: [itemId], references: [id])

  @@index([itemId])
}
